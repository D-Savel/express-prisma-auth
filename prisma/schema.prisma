// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String   @unique   @id
  email String  @unique
  username  String @unique
  role Role @default(FREE_USER)
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map(name:"user")
  stories Post[]
  refreshToken RefreshToken[]
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String   @unique
  userId      String
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expireAt    DateTime @default(dbgenerated("NOW() + interval '1 month'"))
   @@map(name: "refreshToken")
}

model Post {
  id    String   @unique   @id
  name String  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User   User? @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId String?
  @@map(name: "post")
}

enum Role {
ADMIN_ROLE
FREE_USER
BASIC_USER
PREMIUM_USER
}

